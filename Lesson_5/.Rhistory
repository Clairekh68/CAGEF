dat2 <- data.frame(model = c("simple linear regression", "multiple linear regression", "one-way analysis of variance (ANOVA)", "multi-way analysis of variance (ANOVA)", "analysis of covariance (ANCOVA)", "nonlinear least squares", "nonlinear analysis of covaricance (ANCOVA)", "generalized linear models"), R_code = c("lm(y ~ x)", "lm(y ~ x + I(x^2))", "lm(y ~ f)", "lm(y ~ f~1~*f~2~)")
kable(dat2, "html") %>%
dat2 <- data.frame(model = c("simple linear regression", "multiple linear regression", "one-way analysis of variance (ANOVA)", "multi-way analysis of variance (ANOVA)", "analysis of covariance (ANCOVA)", "nonlinear least squares", "nonlinear analysis of covaricance (ANCOVA)", "generalized linear models"), R_code = c("lm(y ~ x)", "lm(y ~ x + I(x^2))", "lm(y ~ f)", "lm(y ~ f~1~*f~2~)"))
kable(dat2, "html") %>%
kable_styling(bootstrap_options = c("striped", "hover"), full_width = FALSE, position = "left")
## read data set ----------------------------------------------------------------------
cholesterol = read.table("http://faculty.washington.edu/rhubb/sisg/SISG-Data-cholesterol.txt", header=T)
getwd()
setwd("~/Tutorials/Module5_Data_Sets_and_Notes/")
## read data set ----------------------------------------------------------------------
cholesterol = read.table("SISG-Data-cholesterol.txt", header=T)
View(cholesterol)
## visualize a few rows of data--------------------------------------------------------
head(cholesterol)
# scatterplot of total cholesterol vs age
plot(age,chol, xlab = "Age (years)", ylab = "Total cholesterol (mg/dl)")
attach(cholesterol)
## visualize a few rows of data--------------------------------------------------------
head(cholesterol)
# scatterplot of total cholesterol vs age
plot(age,chol, xlab = "Age (years)", ylab = "Total cholesterol (mg/dl)")
# with regression line superimposed
abline(lm(chol~age)$coef, col = "red")
## dichotomize age and compare cholesterol in two groups-------------------------------
group = 1*(age > 55)
t.test(chol ~ group)
# boxplot of cholesterol by age group
boxplot(chol ~ group, names = c("30 - 55", "56 - 80"), xlab = "Age", ylab = "Cholesterol (mg/dl)")
## fit a linear model to the age and cholesterol data----------------------------------
fit = lm(chol ~ age)
summary(fit)
confint(fit)
## prediction intervals-----------------------------------------------------------------
predict.lm(fit, newdata=data.frame(age=c(46,47,48)), interval="confidence")
predict.lm(fit, newdata=data.frame(age=c(46,47,48)), interval="prediction")
## anova table--------------------------------------------------------------------------
anova(fit)
## residuals plots----------------------------------------------------------------------
# residuals vs fitted values
plot(fit$fitted, fit$residuals)
# horizontal reference line
abline(0,0)
# Qunatile-quantile plot of residuals
qqnorm(fit$residuals, main = "")
## robust regression--------------------------------------------------------------------
# plot triglycerides vs age
plot(age, TG)
abline(lm(TG~age)$coef, col = "red")
# fit simple linear regression for age and TG
fit.tg = lm(TG ~ age)
# plot residuals vs fitted values
plot(fit.tg$fitted, fit.tg$residuals)
# horizontal reference line
abline(0,0)
# fit robus regression
library(gee)
install.packages("gee")
# fit robus regression
library(gee)
fit.tg.ese = gee(TG ~ age, id = seq(1, length(age)))
## transformations----------------------------------------------------------------------
#plot log transformed TG vs age
plot(age,log(TG))
abline(lm(log(TG)~age)$coef, col = "red")
# fit regression model for log transformed outcomes
fit.tg.ln = lm(log(TG) ~ age)
# plot residuals from log transformed model
plot(fit.tg.ln$fitted, fit.tg.ln$residuals)
# horizontal reference line
abline(0,0)
## investigate delta betas--------------------------------------------------------------
dfb = dfbeta(fit)
## multiple regression for effect of age and BMI on cholesterol-------------------------
par(mfrow = c(1,2))
plot(age,BMI)
plot(BMI,chol)
fit2 = lm(chol ~ age + BMI)
summary(fit2)
# compare age only and age,birthweight models
anova(fit2)
anova(fit,fit2)
## effects modification by sex?---------------------------------------------------------
plot(age[sex == 0],chol[sex==0], xlab = "age", ylab = "chol")
points(age[sex == 1],chol[sex==1], col = "red")
legend(65,140, lty = c(1,1), col = c("black","red"), legend = c("Male","Female"))
# first fit model with age and sex main effects
fit2 = lm(chol ~ age+sex)
# next add sex interaction
fit3 = lm(chol ~ age*sex)
anova(fit3)
anova(fit2,fit3)
## plot effects separately by gender----------------------------------------------------
# scatterplot with points for males only
plot(age[sex == 0],chol[sex == 0], xlim = c(min(age),max(age)),
ylim = c(min(chol),max(chol)), xlab = "Age (years)", ylab = "Total cholesterol (mg/dl)")
# add points for females
points(age[sex == 1],chol[sex == 1], col = "red")
# superimpose regression line for males
abline(coef(fit3)[1],coef(fit3)[2])
# and regression line for females
abline(sum(coef(fit3)[c(1,3)]),sum(coef(fit3)[c(2,4)]), col = "red")
legend(30,240, lty = c(1,1), col = c("black","red"), legend = c("Male","Female"))
## plot effects separately by gender----------------------------------------------------
# scatterplot with points for males only
plot(age[sex == 0],chol[sex == 0], xlim = c(min(age),max(age)),
ylim = c(min(chol),max(chol)), xlab = "Age (years)", ylab = "Total cholesterol (mg/dl)")
# add points for females
points(age[sex == 1],chol[sex == 1], col = "red")
dev.new()
## plot effects separately by gender----------------------------------------------------
# scatterplot with points for males only
plot(age[sex == 0],chol[sex == 0], xlim = c(min(age),max(age)),
ylim = c(min(chol),max(chol)), xlab = "Age (years)", ylab = "Total cholesterol (mg/dl)")
# add points for females
points(age[sex == 1],chol[sex == 1], col = "red")
plot.new()
## effects modification by sex?---------------------------------------------------------
plot(age[sex == 0],chol[sex==0], xlab = "age", ylab = "chol")
points(age[sex == 1],chol[sex==1], col = "red")
legend(65,140, lty = c(1,1), col = c("black","red"), legend = c("Male","Female"))
###### LAB 1 ######################################################################
## read data set
cholesterol = read.table("SISG-Data-cholesterol.txt", header=T)
attach(cholesterol)
###### LAB 1 ######################################################################
## read data set
cholesterol = read.table("SISG-Data-cholesterol.txt", header=T)
attach(cholesterol)
detach(cholesterol)
detach(cholesterol)
detach(cholesterol)
###### LAB 1 ######################################################################
## read data set
cholesterol = read.table("SISG-Data-cholesterol.txt", header=T)
attach(cholesterol)
# compute univariate summary statistics for triglycerides
mean(TG)
median(TG)
sd(TG)
summary(TG)
# graphical displays for triglycerides
boxplot(TG)
stem(TG)
# create a binary indicator for BMI > 25
ibmi = ifelse(BMI > 25, 1, 0)
# compute univariate summary statistics for triglycerides for BMI > 25 and BMI <= 25
tapply(TG,ibmi,mean)
tapply(TG,ibmi,median)
tapply(TG,ibmi,sd)
# plot boxplots for triglycerides separately by BMI > 25 and BMI <= 25
boxplot(TG ~ ibmi)
t.test(TG ~ ibmi)
# scatterplot of triglycerides vs BMI
plot(BMI, TG)
# fit linear regression models for the association between triglycerides and BMI
fit1 = lm(TG ~ BMI)
summary(fit1)
# get prediction intervals at BMI = 23
predict(fit1, newdata = data.frame(BMI = 23), interval = "confidence")
predict(fit1, newdata = data.frame(BMI = 23), interval = "prediction")
###### LAB 2 ######################################################################
# load the gee() package for robust standard errors
library(gee)
# identify outliers in scatterplot of triglycerides vs BMI
plot(BMI,TG)
bmi37 = which(BMI<=37)
# excluding subjects with BMI > 37
fit2 = lm(TG[bmi37] ~ BMI[bmi37])
summary(fit2)
# analyze residuals from the regression analysis of triglycerides and BMI
plot(fit2$fitted, fit2$residuals)
abline(0,0)
qqnorm(fit2$residuals)
qqline(fit2$residuals)
# fit a linear regression model with robust standard errors
fit.gee = gee(TG ~ BMI, id = seq(1,length(TG)))
summary(fit.gee)
# calculate p-values for robust regression
z = abs(fit.gee$coef/sqrt(diag(fit.gee$robust)))
2*(1-pnorm(z))
# fit a regression model for log transformed triglycerides and BMI
fit.log = lm(log(TG) ~ BMI)
summary(fit.log)
# analyze residuals from the regression analysis of log transformed
# triglycerides and BMI
par(mfrow = c(1,2))
plot(fit.log$fitted, fit.log$residuals)
abline(0,0)
qqnorm(fit.log$residuals)
qqline(fit.log$residuals)
# binary variable indicating presence of ApoE4
APOE4 = ifelse(APOE %in% c(3,5,6), 1, 0)
# scatterplot with subjects stratified by ApoE4
par(mfrow = c(1,1))
plot(BMI[APOE4 == 0], TG[APOE4 == 0], pch = 19, xlab = "BMI", ylab = "triglycerides")
points(BMI[APOE4 == 1], TG[APOE4 == 1], pch = 1)
# multiple linear regression of triglycerides on BMI, ApoE4, and interaction
fit3 = lm(TG ~ BMI + APOE4 + BMI*APOE4)
summary(fit3)
###### LAB 3 ######################################################################
library(gee)
library(multcomp)
## Exploratory data analysis ----------------------------------------------------
## graphical display: boxplot
par(mfrow = c(1,2))
boxplot(chol ~ as.factor(rs4775401))
boxplot(chol ~ as.factor(APOE))
## alternative graphical display: graph of means
par(mfrow = c(2,1))
plot.design(chol ~ as.factor(rs4775401))
plot.design(chol ~ as.factor(APOE))
## numeric descriptives
tapply(chol, as.factor(rs4775401), mean)
tapply(chol, as.factor(rs4775401), sd)
tapply(chol, as.factor(APOE), mean)
tapply(chol, as.factor(APOE), sd)
## Inferential data analysis ----------------------------------------------------
fit1 = lm(chol ~ as.factor(rs4775401))
summary(fit1)
anova(fit1)
fit2 = lm(chol ~ as.factor(APOE))
summary(fit2)
anova(fit2)
M2 = contrMat(table(APOE), type="Tukey")
fit3 = lm(chol ~ -1 + as.factor(APOE))
mc2 = glht(fit3, linfct =M2)
summary(mc2, test=adjusted("none"))
summary(mc2, test=adjusted("bonferroni"))
summary(mc2, test=adjusted("holm"))
summary(mc2, test=adjusted("hochberg"))
summary(mc2, test=adjusted("hommel"))
summary(mc2, test=adjusted("BH"))
summary(mc2, test=adjusted("BY"))
summary(mc2, test=adjusted("fdr"))
## One-way (not assuming equal variances)
oneway.test(chol ~ as.factor(rs4775401))
oneway.test(chol ~ as.factor(APOE))
## Using robust standard errors
summary(gee(chol ~ as.factor(rs4775401), id=seq(1,length(chol))))
summary(gee(chol ~ as.factor(APOE), id=seq(1,length(chol))))
## non-parametric ANOVA
kruskal.test(chol ~ as.factor(rs4775401))
kruskal.test(chol ~ as.factor(APOE))
###### LAB 4 ######################################################################
## Two-way ANOVA ------------------------------------------------------------
## exploratory data analysis
table(rs174548, APOE)
tapply(chol, list(as.factor(rs174548), as.factor(APOE)), mean)
tapply(chol, list(as.factor(rs174548), as.factor(APOE)), sd)
plot.design(chol ~ as.factor(rs174548) + as.factor(APOE))
## model with interaction
fit1 = lm(chol ~ as.factor(rs174548)*as.factor(APOE))
summary(fit1)
## model without interaction
fit2 = lm(chol ~ as.factor(rs174548) + as.factor(APOE))
summary(fit2)
## compare models with and without interaction
anova(fit2,fit1)
###### LAB 5 ######################################################################
by(cbind(chol,age), APOE, cor, method="pearson")
by(cbind(chol,age), APOE, cor, method="spearman")
plot(age, chol, xlab="AGE (yrs)", ylab="CHOLESTEROL (mg/dl)", type="n")
for (i in 1:6){
lines(lowess(age[APOE==i], chol[APOE==i]), col=i)
points(age[APOE==i], chol[APOE==i], col=i, pch=16)
}
legend(min(age), max(chol), legend=paste("APOE", seq(1,6)), col=seq(1,6), pch=16, lty=1)
## ANCOVA Model with an interaction
fit1 = lm(chol ~ as.factor(APOE) * age)
summary(fit1)
## ANCOVA Model without an interaction
fit2 = lm(chol ~ as.factor(APOE) + age)
summary(fit2)
## compare models with and without interaction
anova(fit2, fit1)
## ONE-WAY ANOVA model
fit3 = lm(chol ~ as.factor(APOE))
summary(fit3)
anova(fit3, fit2)
## mean cholesterol for different genotypes
predict(fit3, new=data.frame(APOE=1))
predict(fit3, new=data.frame(APOE=2))
predict(fit3, new=data.frame(APOE=3))
predict(fit3, new=data.frame(APOE=4))
predict(fit3, new=data.frame(APOE=5))
predict(fit3, new=data.frame(APOE=6))
## mean cholesterol for different genotypes adjusted by age
predict(fit2, new=data.frame(age=mean(age),APOE=1))
predict(fit2, new=data.frame(age=mean(age),APOE=2))
predict(fit2, new=data.frame(age=mean(age),APOE=3))
predict(fit2, new=data.frame(age=mean(age),APOE=4))
predict(fit2, new=data.frame(age=mean(age),APOE=5))
predict(fit2, new=data.frame(age=mean(age),APOE=6))
detach(cholesterol)
## read data set ----------------------------------------------------------------
cholesterol = read.table("SISG-Data-cholesterol.txt", header=T)
View(cholesterol)
## read data set ----------------------------------------------------------------------
cholesterol = read.table("SISG-Data-cholesterol.txt", header=T)
attach(cholesterol)
# scatterplot of total cholesterol vs age
plot(age,chol, xlab = "Age (years)", ylab = "Total cholesterol (mg/dl)")
dim(cholesterol)
detach(cholesterol)
group = ifelse(chol$age >55, 1, 0)
group = ifelse(cholesterol$age >55, 1, 0)
t.test(cholesterol$chol ~ group)
ggplot(cholesterol, aes(age, group)) + geom_boxplot()
library(tidyverse)
ggplot(cholesterol, aes(age, group)) + geom_boxplot()
ggplot(cholesterol, aes(age, group = group)) + geom_boxplot()
cholesterol <- cholesterol %>% mutate(age_group = ifelse(cholesterol$age >55, 1, 0))
t.test(cholesterol$chol ~ cholesterol$group)
t.test(cholesterol$chol ~ cholesterol$age_group)
ggplot(cholesterol, aes(age_group,chol )) + geom_boxplot()
ggplot(cholesterol, aes(factor(age_group),chol)) + geom_boxplot()
ggplot(cholesterol, aes(factor(age_group),chol)) + geom_boxplot() +
ggplot(cholesterol, aes(factor(age_group),chol)) + geom_boxplot() +
scale_x_discrete(labels = c("30-55", "56-80"))
ggplot(cholesterol, aes(factor(age_group),chol)) + geom_boxplot() +
scale_x_discrete(labels = c("30-55", "56-80"))
ggplot(cholesterol, aes(factor(age_group),chol)) + geom_boxplot() +
scale_x_discrete(labels = c("30-55", "56-80")) +
xlab("age") +
ylab("cholestorol (mg/dl)")
ggplot(cholesterol, aes(age, chol)) + geom_point() + stat_smooth()
ggplot(cholesterol, aes(age, chol)) + geom_point() + stat_smooth(method = "lm")
cholesterol <- read.delim("data/SISG-Data-cholesterol.txt", header = TRUE)
cholesterol <- read.delim("data/SISG-Data-cholesterol.txt", sep = "\t", header = TRUE)
cholesterol <- read.delim("data/SISG-Data-cholesterol.txt", sep = "\t", header = TRUE)
cholesterol <- read.delim("data/SISG-Data-cholesterol.txt", sep = "/t", header = TRUE)
cholesterol <- read.delim("data/SISG-Data-cholesterol.txt", sep = ",", header = TRUE)
cholesterol <- read.delim("data/SISG-Data-cholesterol.txt", sep = ".", header = TRUE)
cholesterol <- read.delim("data/SISG-Data-cholesterol.txt", sep = " ", header = TRUE)
lm(chol~age, data = cholesterol)
fit <- lm(chol~age, data = cholesterol)
summary(fit)
lm(chol~age, data = cholesterol)
min(cholesterol$chol)
detach(cholesterol)
summary(fit)
confint(fit)
predict.lm(fit, newdata = data.frame(age=47), interval = "confidence")
predict.lm(fit, newdata = data.frame(age=47), interval = "preddiction")
predict.lm(fit, newdata = data.frame(age=47), interval = "prediction")
str(fit)
ggplot(cholesterol, aes(x=chol, y=fit$residuals) + geom_point()
ggplot(cholesterol, aes(x=chol, y=fit$residuals)) + geom_point()
ggplot(cholesterol, aes(x=age, y=fit$residuals)) + geom_point()
ggplot(cholesterol, aes(x=age, y=fit$residuals)) + geom_point() + geom_hline(yintercept=0, color="black")
library(broom)
broom(git)
broom(fit)
library(broom)
tidy(fit)
augment(fit)
datfit <- augment(fit)
ggplt(datfit, aes(.fitted, .resid)) + geom_point()
ggplot(datfit, aes(.fitted, .resid)) + geom_point()
ggplot(datfit, aes(.fitted, .resid)) + geom_point()  + geom_hline(yintercept=0, color="black")
qqnorm(fit$residuals)
qqline(fit$residuals)
qqnorm(fit$residuals)
ggplot(cholesterol, aes(age, TG)) + geom_point()
ggplot(cholesterol, aes(age, TG)) + geom_point() + stat_smooth(model = "lm")
ggplot(cholesterol, aes(age, TG)) + geom_point() + geom_smooth(model = "lm")
ggplot(cholesterol, aes(age, TG)) + geom_point() + stat_smooth(model = "lm")
ggplot(cholesterol, aes(age, TG)) + geom_point() + stat_smooth(model = "lm") + geom_smooth(method = "lm")
ggplot(cholesterol, aes(age, TG)) + geom_point() + geom_smooth(method = "lm")
fitTG <- lm(TG ~ age, data = cholesterol)
datfitTG <- augment(fitTG)
ggplot(cholesterol, aes(age, TG)) + geom_point() + stat_smooth(method = "lm")
ggplot(datfitTG, aes(.fitted, .resid)) + geom_point()  + geom_hline(yintercept=0, color="black")
library(gee)
gee(TG~age, data = cholesterol, id = seq(1, length(age))
gee(TG~age, data = cholesterol, id = seq(1, length(age)))
geefit <- gee(TG~age, data = cholesterol, id = seq(1, length(age)))
summary(geefit)
qqnorm(datfit$.resid)
qqnorm(datfitTG$.resid)
augment(geefit)
str(geefit)
plot(geefit$fitted.values, geefit$residuals)
str(geefit)
gee(TG~age, data = cholesterol, id = seq(1, length(age)), plot = TRUE)
gee(TG~age, data = cholesterol, plot=TRUE, id = seq(1, length(age)))
install.packages(spind)
install.packages("spind")
library(spind)
GEE(TG~age, data = cholesterol, id = seq(1, length(age)))
GEE(TG~age, data = cholesterol, plot=TRUE)
install.packages("BCgee")
fitbc <- BCgee(geefit)
library(BCgee)
fitbc <- BCgee(geefit)
plot(fitbc$fitted.values, fitbc$residuals)
summary(geefit)
summary(fitbc)
plot(geefit$residuals, fitbc$residuals)
geefit <- gee(TG ~ age, data = cholesterol, id = seq(1, length(age)))
fitbc <- BCgee(geefit)
plot(geefit$residuals, fitbc$residuals)
it <- gee(y ~ Period+Drug, id = id, data = cereb, family = binomial(logit),
corstr = "exchangeable")
fitbc <- BCgee(fit)
##compare coefficients, standard errors, and Wald statistics
summary(fit)$coefficients
summary(fitbc)$coefficients
##compare residuals
fit$residuals
fitbc$residuals
summary(geefit)$coefficients
geefit <- gee(TG ~ age, data = cholesterol, id = seq(1, length(age)))
summary(geefit)$coefficients
fitbc <- BCgee(geefit)
summary(fitbc)$coefficients
str(geefit)
geefit <- gee(TG ~ age, data = cholesterol)
geefit <- gee(formula = TG ~ age, data = cholesterol)
geefit <- gee(formula = TG ~ age, data = cholesterol, id = age)
fitbc <- BCgee(geefit)
str(geefit)
logfit <- lm(log(TG) ~ age, data = cholesterol)
logdat <- augment(logfit)
ggplot(logdat, aes(.fitted, .resid)) + geom_point()  + geom_hline(yintercept=0, color="black")
summary(logfit)
exp(3.7)
exp10(3.7)
log(2)
exp(0.6931472)
log(3.7115803)
exp(3.7115803)
View(fitTG)
getwd()
setwd("/home/erica/Git/CAGEF/Lesson_5/"
ggplot(cholesterol, aes(BMI, chol)) + geom_point() + stat_smooth(method = "lm")
setwd("/home/erica/Git/CAGEF/Lesson_5/")
ggplot(cholesterol, aes(BMI, chol)) + geom_point() + stat_smooth(method = "lm")
ggplot(cholesterol, aes(age, BMI)) + geom_point() + stat_smooth(method = "lm")
lm(chol ~ age + BMI, data = cholesterol)
mfit <- lm(chol ~ age + BMI, data = cholesterol)
summary(mfit)
anova(datfit, mfit)
anova(fit, mfit)
tt <- t.test(cholesterol$chol ~ cholesterol$age_group)
mfit2 <- lm(chol ~ age + sex, data = cholesterol)
summary(mfit2)
intfit <- lm(chol ~ age * sex)
intfit <- lm(chol ~ age * sex, data = cholesterol)
summary(intfit)
str(cholesterol$sex)
anova(mfit2, intfit)
anova(mfit, mfit2)
anova(fit, mfit2)
ggplot(cholesterol, aes(age, chol, color = sex)) + geom_point() + stat_smooth(method = "lm")
ggplot(cholesterol, aes(age, chol, color = factor(sex))) + geom_point() + stat_smooth(method = "lm")
